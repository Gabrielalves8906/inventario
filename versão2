import tkinter as tk
from tkinter import messagebox

# Função para cadastrar um item
def cadastrar_item():
    nome = entry_nome.get()
    marca = entry_marca.get()
    preco = entry_preco.get()
    setor = entry_setor.get()

    if nome and marca and preco and setor:
        item = f"Nome: {nome}\nMarca: {marca}\nPreço: R${preco}\nSetor: {setor}\n"
        itens_cadastrados.append(item)
        atualizar_lista()
        messagebox.showinfo("Sucesso", "Item cadastrado com sucesso!")
        entry_nome.delete(0, tk.END)
        entry_marca.delete(0, tk.END)
        entry_preco.delete(0, tk.END)
        entry_setor.delete(0, tk.END)
    else:
        messagebox.showerror("Erro", "Por favor, preencha todos os campos!")

# Função para atualizar a lista de itens cadastrados
def atualizar_lista():
    lista_itens.delete(0, tk.END)
    pesquisa = entry_pesquisa.get()

    for item in itens_cadastrados:
        if pesquisa.lower() in item.lower():
            lista_itens.insert(tk.END, item)

# Função para editar um item cadastrado
def editar_item():
    index = lista_itens.curselection()
    if index:
        item = lista_itens.get(index)
        nome_antigo, marca_antiga, preco_antigo, setor_antigo = obter_dados_item(item)
        janela_edicao = tk.Toplevel(window)
        janela_edicao.title("Editar Item")

        # Campos de edição
        label_nome = tk.Label(janela_edicao, text="Nome:")
        label_nome.grid(row=0, column=0, sticky="w")

        entry_nome = tk.Entry(janela_edicao)
        entry_nome.insert(tk.END, nome_antigo)
        entry_nome.grid(row=0, column=1)

        label_marca = tk.Label(janela_edicao, text="Marca:")
        label_marca.grid(row=1, column=0, sticky="w")

        entry_marca = tk.Entry(janela_edicao)
        entry_marca.insert(tk.END, marca_antiga)
        entry_marca.grid(row=1, column=1)

        label_preco = tk.Label(janela_edicao, text="Preço:")
        label_preco.grid(row=2, column=0, sticky="w")

        entry_preco = tk.Entry(janela_edicao)
        entry_preco.insert(tk.END, preco_antigo)
        entry_preco.grid(row=2, column=1)

        label_setor = tk.Label(janela_edicao, text="Setor:")
        label_setor.grid(row=3, column=0, sticky="w")

        entry_setor = tk.Entry(janela_edicao)
        entry_setor.insert(tk.END, setor_antigo)
        entry_setor.grid(row=3, column=1)

        button_salvar = tk.Button(janela_edicao, text="Salvar", command=lambda: salvar_edicao(item, entry_nome.get(), entry_marca.get(), entry_preco.get(), entry_setor.get()))
        button_salvar.grid(row=4, column=0, columnspan=2, pady=10)

# Função para salvar a edição de um item
def salvar_edicao(item, novo_nome, nova_marca, novo_preco, novo_setor):
    nome_antigo, marca_antiga, preco_antigo, setor_antigo = obter_dados_item(item)
    novo_item = item.replace(f"Nome: {nome_antigo}\n", f"Nome: {novo_nome}\n")
    novo_item = novo_item.replace(f"Marca: {marca_antiga}\n", f"Marca: {nova_marca}\n")
    novo_item = novo_item.replace(f"Preço: R${preco_antigo}\n", f"Preço: R${novo_preco}\n")
    novo_item = novo_item.replace(f"Setor: {setor_antigo}\n", f"Setor: {novo_setor}\n")

    itens_cadastrados[lista_itens.curselection()[0]] = novo_item
    atualizar_lista()
    messagebox.showinfo("Sucesso", "Item atualizado com sucesso!")

# Função para excluir um item cadastrado
def excluir_item():
    index = lista_itens.curselection()
    if index:
        resposta = messagebox.askyesno("Confirmação", "Deseja excluir o item selecionado?")
        if resposta:
            del itens_cadastrados[index[0]]
            atualizar_lista()
            messagebox.showinfo("Sucesso", "Item excluído com sucesso!")

# Função para obter os dados de um item cadastrado
def obter_dados_item(item):
    nome = item.split("\n")[0].split(": ")[1]
    marca = item.split("\n")[1].split(": ")[1]
    preco = item.split("\n")[2].split(": ")[1].replace("R$", "")
    setor = item.split("\n")[3].split(": ")[1]
    return nome, marca, preco, setor

# Função para abrir a segunda tela
def mostrar_itens_setor():
    janela_itens_setor = tk.Toplevel(window)
    janela_itens_setor.title("Itens e Setores")

    label_titulo = tk.Label(janela_itens_setor, text="Itens e Setores")
    label_titulo.pack()

    lista_itens_setor = tk.Listbox(janela_itens_setor, width=50)
    lista_itens_setor.pack()

    for item in itens_cadastrados:
        setor = obter_dados_item(item)[3]
        lista_itens_setor.insert(tk.END, f"Item: {item}\nSetor: {setor}\n")

# Criação da janela principal
window = tk.Tk()
window.title("Meninos da PUC")
window.geometry("400x400")

# Título e subtítulo
label_titulo = tk.Label(window, text="Meninos da PUC", font=("Arial", 16, "bold"))
label_titulo.pack(pady=10)

label_subtitulo = tk.Label(window, text="Developed by Gabriel", font=("Arial", 12))
label_subtitulo.pack(pady=5)

# Frame para os campos de cadastro
frame_cadastro = tk.Frame(window)
frame_cadastro.pack(pady=10)

# Campos de cadastro
label_nome = tk.Label(frame_cadastro, text="Nome:")
label_nome.grid(row=0, column=0, sticky="w")

entry_nome = tk.Entry(frame_cadastro)
entry_nome.grid(row=0, column=1)

label_marca = tk.Label(frame_cadastro, text="Marca:")
label_marca.grid(row=1, column=0, sticky="w")

entry_marca = tk.Entry(frame_cadastro)
entry_marca.grid(row=1, column=1)

label_preco = tk.Label(frame_cadastro, text="Preço:")
label_preco.grid(row=2, column=0, sticky="w")

entry_preco = tk.Entry(frame_cadastro)
entry_preco.grid(row=2, column=1)

label_setor = tk.Label(frame_cadastro, text="Setor:")
label_setor.grid(row=3, column=0, sticky="w")

entry_setor = tk.Entry(frame_cadastro)
entry_setor.grid(row=3, column=1)

button_cadastrar = tk.Button(frame_cadastro, text="Cadastrar", command=cadastrar_item)
button_cadastrar.grid(row=4, column=0, columnspan=2, pady=10)

# Frame para pesquisa
frame_pesquisa = tk.Frame(window)
frame_pesquisa.pack(pady=10)

label_pesquisa = tk.Label(frame_pesquisa, text="Pesquisar:")
label_pesquisa.grid(row=0, column=0)

entry_pesquisa = tk.Entry(frame_pesquisa)
entry_pesquisa.grid(row=0, column=1)

button_pesquisar = tk.Button(frame_pesquisa, text="Pesquisar", command=atualizar_lista)
button_pesquisar.grid(row=0, column=2, padx=10)

# Lista de itens cadastrados
lista_itens = tk.Listbox(window, width=50)
lista_itens.pack(pady=10)

# Botões para editar e excluir item
frame_botoes = tk.Frame(window)
frame_botoes.pack(pady=5)

button_editar = tk.Button(frame_botoes, text="Editar", command=editar_item)
button_editar.grid(row=0, column=0, padx=5)

button_excluir = tk.Button(frame_botoes, text="Excluir", command=excluir_item)
button_excluir.grid(row=0, column=1, padx=5)

# Botão para mostrar itens e setores
button_itens_setor = tk.Button(window, text="Itens e Setores", command=mostrar_itens_setor)
button_itens_setor.pack(pady=5)

# Itens cadastrados iniciais
itens_cadastrados = [

]

# Preencher a lista com os itens cadastrados iniciais
for item in itens_cadastrados:
    lista_itens.insert(tk.END, item)

window.mainloop()
